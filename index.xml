<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WOOKLOG</title>
    <link>https://changwookyang.github.io/</link>
    <description>Recent content on WOOKLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Feb 2021 00:30:00 +0900</lastBuildDate>
    
	<atom:link href="https://changwookyang.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HTTP 웹 기본지식(4) - HTTP 상태코드</title>
      <link>https://changwookyang.github.io/post/httpinflearn4/</link>
      <pubDate>Sun, 14 Feb 2021 00:30:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/httpinflearn4/</guid>
      <description>상태코드  클라이언트가 보낸 요청의 처리 상태를 응답에서 알려주는 기능
  1xx (Informational) : 요청이 수신되어 처리중(거의 사용X) 2xx (Successful) : 요청 정상 처리 3xx (Redirection) : 요청을 완료하려면 추가 행동이 필요 4xx (Client Error) : 클라이언트 오류, 잘못된 문법등으로 서버가 요청을 수행할 수 없음 5xx (Server Error) : 서버 오류, 서버가 정상 요청을 처리하지 못함  2xx - 성공  클라이언트의 요청을 성공적으로 처리</description>
    </item>
    
    <item>
      <title>HTTP 웹 기본지식(3) - HTTP 메서드</title>
      <link>https://changwookyang.github.io/post/httpinflearn3/</link>
      <pubDate>Sat, 13 Feb 2021 17:30:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/httpinflearn3/</guid>
      <description>HTTP API  URI 설계에 가장 중요한 것은 리소스 식별
   리소스의 의미는 뭘까?
 회원을 등록하고 수정하고 조회하는게 리소스가 아니다.</description>
    </item>
    
    <item>
      <title>HTTP 웹 기본지식(2) - HTTP 기본</title>
      <link>https://changwookyang.github.io/post/httpinflearn2/</link>
      <pubDate>Sat, 13 Feb 2021 15:00:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/httpinflearn2/</guid>
      <description>모든 것이 HTTP - HTTP 메시지에 모든 것을 전송  HTML, TEXT Image, 음성, 영상, 파일 JSON, XML 거의 모든 형태의 데이터 전송 가능 서버 간에 데이터를 주고 받을때도 대부분 HTTP 사용 지금은 HTTP 시대!</description>
    </item>
    
    <item>
      <title>HTTP 웹 기본지식(1)</title>
      <link>https://changwookyang.github.io/post/httpinflearn/</link>
      <pubDate>Fri, 12 Feb 2021 22:30:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/httpinflearn/</guid>
      <description>인터넷 네트워크 복잡한 인터넷망을 이해하기 위해서는 IP에 대해서 알아야한다.
IP   지정한 IP 주소에 데이터 전달
  패킷(Packet)이라는 통신 단위로 데이터 전달</description>
    </item>
    
    <item>
      <title>Spring boot Batch</title>
      <link>https://changwookyang.github.io/post/springbootbatch/</link>
      <pubDate>Sun, 07 Feb 2021 23:00:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/springbootbatch/</guid>
      <description>Spring Boot Batch 강점  자동화 대용량 처리 견고성 : 예측못한 상황이나 동작에 대한 예외 처리도 정의 가능 재사용성 : 공통적인 작업을 단위별로 재사용  Spring Boot Batch 고려사항  단순하게 : 복잡한구조, 로직을 피해야한다.</description>
    </item>
    
    <item>
      <title>HTTP 프로토콜</title>
      <link>https://changwookyang.github.io/post/http/</link>
      <pubDate>Sat, 06 Feb 2021 23:00:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/http/</guid>
      <description>정의 : 인터넷에서 데이터를 주고 받을 수 있는 규칙  설명  요청 : 데이터 주세요! client -&amp;gt; server : request 응답 : 여기 데이터~!</description>
    </item>
    
    <item>
      <title>Linux 기본명령어</title>
      <link>https://changwookyang.github.io/post/linux/</link>
      <pubDate>Fri, 05 Feb 2021 16:00:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/linux/</guid>
      <description>모든 명령어는 명령어 뒤에 &amp;ndash;help 옵션을 주면 자세한 사용 방법이 나온다.
예를 들어 ls 명령어의 자세한 사용방법과 옵션을 알고싶으면 ls &amp;ndash;help를 입력하면 된다.</description>
    </item>
    
    <item>
      <title>@Transactional(2)</title>
      <link>https://changwookyang.github.io/post/transactional2/</link>
      <pubDate>Sun, 31 Jan 2021 04:30:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/transactional2/</guid>
      <description>많은 비지니스 로직이 Controller에 절차지향적으로 짜여져 있는 경우가 많다.
business를 하나의 트랜잭션 단위로 Service쪽으로 옮기는 작업을 하면
객체지향적으로 코딩할 수 있고, 재사용이 가능하며 동시에 Transaction 단위로 개발하기 쉽다.</description>
    </item>
    
    <item>
      <title>@Transactional(1)</title>
      <link>https://changwookyang.github.io/post/transactional1/</link>
      <pubDate>Sat, 30 Jan 2021 12:30:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/transactional1/</guid>
      <description>Spring에서 JPA 기술을 쓸 때 빼놓을 수 없는 기능 중 하나   transaction begin, commit을 자동 수행해준다.
  예외 발생 시, rollback 처리를 자동 수행해준다.</description>
    </item>
    
    <item>
      <title>클러스터 미러링 용어</title>
      <link>https://changwookyang.github.io/post/clustermirroring/</link>
      <pubDate>Thu, 28 Jan 2021 01:20:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/clustermirroring/</guid>
      <description>클러스터 컴퓨팅 파워를 증가시키기 위한 방법이다. 여러 대의 일반 워크스테이션을 네트워크로 연결하여 하나의 PC처럼 작동하게 하는 기술이다. 워크스테이션의 CPU 성능이 좋아지고 네트워크 속도 또한 엄청나게 발달하여 가능해졌다.</description>
    </item>
    
    <item>
      <title>Database Index</title>
      <link>https://changwookyang.github.io/post/database-index/</link>
      <pubDate>Sun, 24 Jan 2021 01:20:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/database-index/</guid>
      <description>색인(Index) 내가 원하는 부분에 쉽고 빠르게 찾아서 전달해주는 역할
왜 DB에서 Index를 사용해야할까? 테이블에서 어떤 값을 조회할 때, 테이블에 있는 데이터를 모두 조회한 후</description>
    </item>
    
    <item>
      <title>MySQL</title>
      <link>https://changwookyang.github.io/post/mysql/</link>
      <pubDate>Sat, 23 Jan 2021 21:20:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/mysql/</guid>
      <description>Oracle vs MySQL   컬럼값이 null일때 대체해주는 방법이 다르다.
 Oracle : SELECT NVL(USER_ID, &amp;lsquo;&#39;) FROM USER;
MySQLSELECT IFNULL(USER_ID, &amp;lsquo;&#39;) FROM USER;</description>
    </item>
    
    <item>
      <title>RabbitMQ</title>
      <link>https://changwookyang.github.io/post/rabbitmq/</link>
      <pubDate>Thu, 21 Jan 2021 00:05:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/rabbitmq/</guid>
      <description>RabbitMQ 비동기 작업 큐를 사용하려면 중간 단계에 Broker라고 부르는 메시지큐가 등장한다
RabbitMQ, ActiveMQ, ZeroMQ, Kafka가 대표적이다
RabbitMQ는 얼랭(Erlang)으로 AMQP를 구현한 메시지 브로커 시스템이다.</description>
    </item>
    
    <item>
      <title>Gradle 멀티 프로젝트</title>
      <link>https://changwookyang.github.io/post/gradlemulti/</link>
      <pubDate>Wed, 20 Jan 2021 00:10:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/gradlemulti/</guid>
      <description>Gradle 멀티 프로젝트 관리 참고 : https://jojoldu.tistory.com/123
 공통으로 사용되는 클래스를 여러 프로젝트에서 사용한다면 비효율적이다.
Multi module 방식으로 사용하면 소스관리도 쉽고 편안!</description>
    </item>
    
    <item>
      <title>Spring 3대 특징</title>
      <link>https://changwookyang.github.io/post/spring3/</link>
      <pubDate>Mon, 26 Oct 2020 23:10:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/spring3/</guid>
      <description>Spring 3대 특징 출처
- POJO (Plain Old Java Object) Servlet 형식에 맞추지 않고 추상화되어 라이브러리에 들어가 있으므로
개발자는 비지니스 로직에만 집중하면 된다.</description>
    </item>
    
    <item>
      <title>Design Pattern #2</title>
      <link>https://changwookyang.github.io/post/degisnpattern2/</link>
      <pubDate>Wed, 07 Oct 2020 21:45:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/degisnpattern2/</guid>
      <description># Chapter 5 - Singleton 패턴   클래스의 인스턴스가 단 하나만 필요할 경우
ex) 컴퓨터 자체를 표현한 클래스, 윈도우 시스템 등</description>
    </item>
    
    <item>
      <title>Design Pattern #1</title>
      <link>https://changwookyang.github.io/post/designpatter1/</link>
      <pubDate>Tue, 06 Oct 2020 01:45:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/designpatter1/</guid>
      <description># 디자인 패턴 백설 공주를 연기하는 연기자가 누구이든 왕자와 백설공주는 사랑을 한다.
디자인 패턴은 &amp;lsquo;역할&amp;rsquo;에 집중한다.
디자인 패턴은 구성원이 다르더라도 부품이 어떻게 조립되어있고,</description>
    </item>
    
    <item>
      <title>Static 변수, 클래스</title>
      <link>https://changwookyang.github.io/post/static/</link>
      <pubDate>Sat, 03 Oct 2020 15:45:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/static/</guid>
      <description>Java에서 Static 키워드를 사용한다는 것은 메모리에 한번 할당되어
프로그램이 종료될 때 해제되는 것을 의미한다.
일반적으로 우리가 만든 Class는 Static 영역에 생성되고,</description>
    </item>
    
    <item>
      <title>정렬 뿌시기</title>
      <link>https://changwookyang.github.io/post/sort/</link>
      <pubDate>Wed, 23 Sep 2020 01:00:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/sort/</guid>
      <description>힙정렬, 합병정렬, 퀵정렬
 1. 힙 정렬   힙은 느슨한 정렬으로 자식은 부모보다 항상 크거나 작도록 정렬한다(최대힙/최소힙)
  시간복잡도는 O(N * logN) 이다.</description>
    </item>
    
    <item>
      <title>프로그래머스 #42626 - 더 맵게</title>
      <link>https://changwookyang.github.io/post/heap/</link>
      <pubDate>Tue, 22 Sep 2020 00:20:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/heap/</guid>
      <description>프로그래머스 #42626 - 더 맵게 [힙 개념] 1. 힙이란 ?  완전 이진 트리의 일종으로 우선순위 큐를 위해 만들어진 자료구조 여러 값 중에서 최소, 최대값을 빠르게 찾기위한 자료구조 힙은 느슨한 정렬상태 부모의 키 값이 자식보다 항상 큰/작은 이진 트리를 말한다.</description>
    </item>
    
    <item>
      <title>TDD, JUnit, TestDouble</title>
      <link>https://changwookyang.github.io/post/junit_mock/</link>
      <pubDate>Wed, 16 Sep 2020 23:00:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/junit_mock/</guid>
      <description>TDD란? (Test-Driven Development) 테스트를 중점으로 두고, 테스트를 선 작성하여 통과하는 코드를 후에 개발하는 Agile 개발 방법론
given -&amp;gt; when -&amp;gt; then</description>
    </item>
    
    <item>
      <title>Array 정렬</title>
      <link>https://changwookyang.github.io/post/arraysort/</link>
      <pubDate>Mon, 14 Sep 2020 23:00:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/arraysort/</guid>
      <description>Array 내림차순 정렬 Primitive type Array 내림차순 정렬을 어떻게 할지 알아보았다.
stream을 쓴것도 있길래 좀 더 클래식한 코드가 없는지 찾아보다가</description>
    </item>
    
    <item>
      <title>순열알고리즘(DFS)</title>
      <link>https://changwookyang.github.io/post/permutation/</link>
      <pubDate>Thu, 10 Sep 2020 02:02:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/permutation/</guid>
      <description>순열 알고리즘 1. 순열이란? 서로 다른 n개 중 r개를 골라 순서로 고려해 나열한 경우의 수 프로그래머스 42839
2. DFS를 사용하여 구현!</description>
    </item>
    
    <item>
      <title>스레드(Thread)</title>
      <link>https://changwookyang.github.io/post/thread/</link>
      <pubDate>Wed, 02 Sep 2020 02:02:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/thread/</guid>
      <description>스레드(Thread)   멀티 태스킹
파일을 인쇄하며 동시 문서를 편집하는 것처럼 컴퓨터 CPU 하나로 병렬 작업 가능하다.
운영체제가 CPU 시간을 쪼개서 각 작업들에 할당하여 작업들이 동시에 수행되는 것처럼 보인다.</description>
    </item>
    
    <item>
      <title>포트폴리오 작성법</title>
      <link>https://changwookyang.github.io/post/devportfolio/</link>
      <pubDate>Thu, 27 Aug 2020 02:49:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/devportfolio/</guid>
      <description>포트폴리오 작성 ▶ 포트폴리오 작성법 참고 1. 이직초보 어느 개발자의 이력서 만들기 - 어떻게 하면 내 이력서를 보게 할까, 인상적인 첫 페이지 만들기   인적사항, 필수적인것들만</description>
    </item>
    
    <item>
      <title>JPQL - 인프런</title>
      <link>https://changwookyang.github.io/post/jpql/</link>
      <pubDate>Fri, 21 Aug 2020 18:50:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/jpql/</guid>
      <description>객체지향 쿼리 언어(JPQL) [1] JPQL 소개   가장 단순한 조회 방법
EntityManager.find()
객체 그래프 탐색 (a.getB().getC())
  JPQL은 객체지향 쿼리언어, 테이블 대상이 아닌 entity 객체를 대상으로 검색</description>
    </item>
    
    <item>
      <title>JPA(2) - 인프런</title>
      <link>https://changwookyang.github.io/post/jpa2/</link>
      <pubDate>Thu, 20 Aug 2020 02:00:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/jpa2/</guid>
      <description>JPA(2)-인프런 [1] 상속관계 매핑(1, 조인전략, 2. 단일테이블, 3. 구현클래스) 상속관계 매핑 : 객체의 상속과 구조와 DB의 슈퍼타입 서브타입 관계를 매핑 슈퍼타입 서브타입 논리 모델을 실제 물리 모델로 구현하는 방법</description>
    </item>
    
    <item>
      <title>JPA(1) - 인프런</title>
      <link>https://changwookyang.github.io/post/jpa1/</link>
      <pubDate>Thu, 13 Aug 2020 02:50:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/jpa1/</guid>
      <description>JPA(1) - 인프런 1. 객체를 관계형 DB에 관리, SQL에 의존적이다. 객체 필드추가 public class Member { private String memberId; private String name; // tel필드 추가 시, Insert, update, select 모두추가필요 	private String tel;	} 객체 vs 관계형 데이터베이스 객체와 관계형 DB의 차이점</description>
    </item>
    
    <item>
      <title>JVM이란 무엇인가</title>
      <link>https://changwookyang.github.io/post/jvm/</link>
      <pubDate>Thu, 06 Aug 2020 23:50:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/jvm/</guid>
      <description>&amp;ldquo;JVM이란 무엇인가&amp;rdquo; 자바 가상머신 이해하기 자바 가상 머신(Java Virtual Machine, JVM)은 시스템 메모리를 관리하면서
자바 기반 애플리케이션을 위해 이식 가능한 실행환경을 제공한다.</description>
    </item>
    
    <item>
      <title>String &amp; StringBuilder</title>
      <link>https://changwookyang.github.io/post/string_stringbuilder/</link>
      <pubDate>Tue, 04 Aug 2020 23:50:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/string_stringbuilder/</guid>
      <description>String, StringBuffer, StringBuilder 차이 및 장단점  Java에서 문자열을 다루는 대표적인 클래스로 String, StringBuffer, StringBuilder가 있다. 연산이 많지 않을때는 어떤 클래스를 사용하여도 문제없으나</description>
    </item>
    
    <item>
      <title>ElasticSearch 기본 동작 이해</title>
      <link>https://changwookyang.github.io/post/elasticsearch/</link>
      <pubDate>Mon, 03 Aug 2020 23:30:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/elasticsearch/</guid>
      <description>ElasticSearch 기본 동작 이해 참고링크
1. ElasticSearch란? ElasticSearch는 오픈 소스이고 REST 기반의 실시간 검색 및 분석 엔진이다. Java로 작성되어졌으며 아파치 Lucene기반으로 검색 및 REST-Based API를 지원한다.</description>
    </item>
    
    <item>
      <title>스프링과 스프링부트</title>
      <link>https://changwookyang.github.io/post/springboot_20200802/</link>
      <pubDate>Sun, 02 Aug 2020 23:00:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/springboot_20200802/</guid>
      <description>스프링과 스프링부트 참고링크
스프링은 무엇인가? 스프링 프레임워크는 자바 생태계에서 가장 대중적인 응용프로그램 개발 프레임워크이다.
1. 의존성 주입(DI) &amp;amp; 제어의 역전(Ioc) 의존성 주입(DI, Dependency Injection)과 제어의 역전(Inversion of Control)은 스프링에서 가장 중요한 특징 중 하나이다.</description>
    </item>
    
    <item>
      <title>PathVariable &amp; QueryParameter</title>
      <link>https://changwookyang.github.io/post/pathvariable/</link>
      <pubDate>Wed, 29 Jul 2020 22:30:21 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/pathvariable/</guid>
      <description>PathVariable과 Query Parameter는 무엇일까? 1. Query Parameter 페이지를 만들 때 페이지마다 식별된 파라미터 경로가 필요하다.
다음과 같이 get 파라미터를 사용하여 데이터를 넘길 수 있다.</description>
    </item>
    
    <item>
      <title>LRU 알고리즘</title>
      <link>https://changwookyang.github.io/post/lru/</link>
      <pubDate>Sun, 26 Jul 2020 22:20:21 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/lru/</guid>
      <description>LRU 알고리즘  Least Recently Used Algorithm
 Cache 알고리즘 중에 가장 유명한 알고리즘 중 하나로 LRU알고리즘이 있다.
캐시의 리소스 양은 제한되어 있고 제한된 리소스 내에서 데이터를 빠르게 저장하고 접근해야한다.</description>
    </item>
    
    <item>
      <title>프로그래머스 43105, 정수삼각형</title>
      <link>https://changwookyang.github.io/post/programmers43105/</link>
      <pubDate>Sat, 25 Jul 2020 11:30:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/programmers43105/</guid>
      <description>프로그래머스 43105, 정수삼각형 문제 링크  동적 프로그래밍 문제이다. 점화식을 알면 생각보다 쉽게 풀수 있다!
각 행의 합은 (이전 행 열인덱스-1), (이전행의 열인덱스)까지의 합 중 최대값을 가져오면 된다.</description>
    </item>
    
    <item>
      <title>Dynamic Programming</title>
      <link>https://changwookyang.github.io/post/dp/</link>
      <pubDate>Thu, 23 Jul 2020 23:10:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/dp/</guid>
      <description>DP를 정리해보자  DP란? Dynamic programming! 동적프로그래밍은 기억하기 프로그래밍이라는 용어를 쓴다.
DP를 공부하고 느낀점으로는, 잘 기억해놨다가 잘 가져다쓰는(점화식 활용) 것이 중요하다!</description>
    </item>
    
    <item>
      <title>전화번호 목록(프로그래머스 42577)</title>
      <link>https://changwookyang.github.io/post/phone_book/</link>
      <pubDate>Sat, 18 Jul 2020 23:32:41 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/phone_book/</guid>
      <description>전화번호 목록 프로그래머스 42577 URL
 첫번쨰 방법으로 풀다가 안되어서 두번째 방법으로 푸니까 잘 됐다!
아이디어는 동일한데 첫번째는 정렬을 했다.</description>
    </item>
    
    <item>
      <title>REST API Designing guidelines</title>
      <link>https://changwookyang.github.io/post/restapi-copy/</link>
      <pubDate>Sat, 18 Jul 2020 16:32:21 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/restapi-copy/</guid>
      <description>RESTful API Designing guidelines 번역해주신거에서 정리해봤다.
API는 개발자들이 데이터와 상호작용을 하기 위한 인터페이스이다. 잘 디자인된 API는 사용하기 쉽고, 개발자들의 삶을 편하게 만들어준다.</description>
    </item>
    
    <item>
      <title>REST API</title>
      <link>https://changwookyang.github.io/post/restapi/</link>
      <pubDate>Fri, 17 Jul 2020 23:32:21 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/restapi/</guid>
      <description>REST API란 무엇인가? 얄코 REST API 이 동영상 보고 정리함!
REST란? REST(REpresentational State Transfer)는 인터넷 상의 컴퓨터 시스템간 상호운용성을 제공하는 방법 중 하나!</description>
    </item>
    
    <item>
      <title>DFS/BFS 알고리즘</title>
      <link>https://changwookyang.github.io/post/bfsdfs/</link>
      <pubDate>Wed, 15 Jul 2020 23:32:21 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/bfsdfs/</guid>
      <description>* DFS, BFS는 그래프를 탐색하는 방법 그래프란?  노드(N, node)와 노드를 연결하는 간선(E, edge)을 하나로 모아 놓은 자료구조 정점,Vertex(=노드)과 간선으로 이루어진 자료구조의 일종이다.</description>
    </item>
    
    <item>
      <title>프로그래머스 12899 - 124나라의숫자</title>
      <link>https://changwookyang.github.io/post/programmers12899/</link>
      <pubDate>Wed, 15 Jul 2020 00:33:21 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/programmers12899/</guid>
      <description>124 나라의 숫자 문제 설명
124나라의 숫자 나의 풀이 public String solution(int n) { String answer = &amp;#34;&amp;#34;; while( n &amp;gt; 0 ){ String addNum = &amp;#34;&amp;#34;; if(n%3 == 0){ addNum = &amp;#34;4&amp;#34;; n = n/3-1; } else { addNum = String.</description>
    </item>
    
    <item>
      <title>Lambda란?</title>
      <link>https://changwookyang.github.io/post/lambda/</link>
      <pubDate>Tue, 14 Jul 2020 00:32:21 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/lambda/</guid>
      <description>람다식 정리! 람다식 자주 나오는데 잘모름..
참고 사이트 : 람다식
Java8 버전부터 람다식이 지원되었다.
람다식은 익명함수를 생성하기 위한 식으로 객체 지향 언어보다 함수지향언어에 가깝다!</description>
    </item>
    
    <item>
      <title>함수형 프로그래밍이란?</title>
      <link>https://changwookyang.github.io/post/funcprogramming/</link>
      <pubDate>Mon, 13 Jul 2020 23:47:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/funcprogramming/</guid>
      <description>함수형 프로그래밍이란? 기존의 명령형 방식 : 너는 이걸하고 저걸 누구랑 어떻게 해서 어떠한 결과를 산출해 내라!
함수형 형식 : 이거는 이거다!</description>
    </item>
    
    <item>
      <title>DevOps란?</title>
      <link>https://changwookyang.github.io/post/devops/</link>
      <pubDate>Sun, 12 Jul 2020 23:10:00 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/devops/</guid>
      <description>DevOps란? 1. 등장 배경 개발만이 전부가 아니다. 프로젝트를 빌드하고 배포하고 테스트하는 운영업무도 해야 한다.
만약, 두 개의 일을 다른 조직이 나눠서 관리하게 된다면 의사소통도 좋지 않고 비효율적인 면이 많을 것이다.</description>
    </item>
    
    <item>
      <title>Collection 간단 정리</title>
      <link>https://changwookyang.github.io/post/collection/</link>
      <pubDate>Sat, 11 Jul 2020 23:32:21 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/collection/</guid>
      <description>도대체 Collection이란 무엇인가?!! 너무 자주나오는데 잘 모름! 헷갈림!
Java에서 Collection이란 데이터의 집합, 그룹을 의미한다!!!
다음은 상속구조를 나타낸다!! Collection이 다 상속했다!! Map의 경우에는 Collection으로 상속받고 있지 않지만 Collection으로 분류된다.</description>
    </item>
    
    <item>
      <title>Backtracking 알고리즘</title>
      <link>https://changwookyang.github.io/post/backtracking/</link>
      <pubDate>Fri, 10 Jul 2020 00:32:21 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/backtracking/</guid>
      <description>Backtracking 이란? 어떤 노드의 유망성 점검 후, 유망하지 않으면 그 노드의 부모노드로 되돌아간 후 다른 자손노드를 검색
KEYWORD ! &amp;ldquo;배제&amp;rdquo;, &amp;ldquo;풀이 시간 단축&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Spring Framework(1)</title>
      <link>https://changwookyang.github.io/post/spring/</link>
      <pubDate>Wed, 08 Jul 2020 00:32:21 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/spring/</guid>
      <description>Spring 프래임워크란? IoC와 AOP를 지원하는 경량의 컨테이너 프레임워크 - 경량(두 가지 이유)  1. 모듈들이 jar파일로 묶여있다. 2. POJO(Plain Old Java Object) 지원하여 형식 제약이 없다 ex) Servlet 같은 경우는 doGet, doPost 등의 제약이 있는 것이 차이점 - 컨테이너  객체의 인스턴스 생성, 생명주기를 관리프로그래머가 작성한 코드를 스스로 참조한 뒤 알아서 객체의 생성과 소멸을 컨트롤해준다.</description>
    </item>
    
    <item>
      <title>WOOKLOG!</title>
      <link>https://changwookyang.github.io/post/test/</link>
      <pubDate>Tue, 07 Jul 2020 00:32:41 +0900</pubDate>
      
      <guid>https://changwookyang.github.io/post/test/</guid>
      <description>WELCOME TO WOOKLOG!
모두 열공!</description>
    </item>
    
    <item>
      <title></title>
      <link>https://changwookyang.github.io/post/binarysearch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://changwookyang.github.io/post/binarysearch/</guid>
      <description>이분 탐색 이분 탐색 / 이진 탐색 알고리즘은 탐색하는 범위를 줄여나가며 원하는 값을 탐색하는 알고리즘   배열을 완전 탐색하는 알고리즘(brute force)은 상황에 따라 다르지만, o(N) 보다 크거나 같은 시간복잡도를 가진다.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://changwookyang.github.io/post/http2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://changwookyang.github.io/post/http2/</guid>
      <description>HTTP 프로토콜 정의 : 인터넷에서 데이터를 주고 받을 수 있는 규칙  설명  요청 : 데이터 주세요! client -&amp;gt; server : request 응답 : 여기 데이터~!</description>
    </item>
    
  </channel>
</rss>